
1. The class AbsExtension is inherited by following classes
			AbsExtension
			^  ^  ^  ^
			 INHERITED
			|  |  |  |
			|  |  |  |
     KleeExtension _____|  |  |  |_____  CrestExtension
                           |  |
CoverageTestExtension _____|  |_____  SplatExtension
			

2.		       ExtensionMgr
	is friend for all the above classes so it can acess all the private and protected members of above classes
3.
	courious about how the 
		local variables
		l1
		l2
		.
		..
		...

		int i,j,k;
		for () {
			for (){
			....
			}
		}
	generated?
-> class Variable -> OutputArrayInitializers() == basically the aim of function is to initialize 
	the array variables which were not initialized at declaration.
	so it chooses the unitialized array variables and fills using loop
	

4. many a times encountered with field_vars?Here's what it is!!
->
	field_vars[] = list of Variable* type
         _________________
        [__|__|___|___|___]
Following sample variable names can be there in field_vars

 func_32_rv.f1
 p_35.f0
 l_105.f0
 g_201.f0
 g_201.f5.f0
 g_203[2][2][1].f0

	its created for each struct/ union variable

5. The source code can be divided accordingly by what I feel:
PART A: The types of generators and types of extensions
	ex. DFS, Default,Abs,Klee,splat, crest, coverageTestExtn
PART B: probabilitie and the way to generate random nnumbers

PART C: The analysis and Fact* related files

PART D: main generation files
	1.Block generation
	2.Expression Generation
	3.Function
	4.FunctionInvocation
	5.Statement
	6. Type
	7.Variable generation

6. Probabilites.cpp file consists of various classes as:
	ProbabilityFilter

			ProbElem				
			/	\
		       /         \	inherited
		      /		  \
	SingleProbElem		GroupProbElem

			
	Probabilities
	DistributionTable
   above all take help of ProbabilityTable.h file which has some basic data structures created

7.			Expression
			/ |    |\
		       /  |    | \	 
		      /	  |    |  \ 
		     /    |    |   \ 
		    /     |    |    \ 
		   /      |    |     \
ExpressionAssign  /       |    |      \------>ExpressionVariable
			  |    |
			  |    |							Following is the inheritance 
			  |    |
ExpressionComma <---------+    +--------------->ExpressionFunCall
	
-an Expression can be
	1.constant
	2.variable
	3.function
	4.assignment
	5.commaexpr
	6.lhs

- The expression probabilities are initialized in Expression class but not in Probabilities class

8.FunctionInvocation can call
		1.unary
		2.binary
		3.user
		4.can be from SafeOpFlag

